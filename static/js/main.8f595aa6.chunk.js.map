{"version":3,"sources":["theme.js","device.js","components/Card/Card.styled.js","components/Card/Card.js","components/Slider/Slider.js","components/Graph/Graph.js","components/Loader/Loader.js","utils/forecast.js","utils/forecastImage.js","utils/translator.js","containers/Forecast/components/TodaysWeatherCard/TodaysWeatherCard.js","containers/Forecast/components/ForecastSliderCard/ForecastSliderCard.js","services/weatherService.js","redux/actions/loaderActions.js","containers/Forecast/Forecast.styled.js","containers/Forecast/Forecast.js","containers/WeatherDetail/components/WeatherResumeCard/WeatherResumeCard.styled.js","containers/WeatherDetail/components/WeatherResumeCard/WeatherResumeCard.js","containers/WeatherDetail/WeatherDetail.styled.js","containers/WeatherDetail/WeatherDetail.js","redux/reducers/loaderReducer.js","redux/reducers/combineReducers.js","App.js","serviceWorker.js","index.js","assets/img/loader.svg"],"names":["theme","colors","main","white","fonts","secondary","shadows","size","device","mobileS","mobileM","mobileL","tablet","laptop","laptopL","desktop","desktopL","CardWrapper","styled","div","props","Card","children","Slider","slides","config","map","slide","index","key","x","d","dt","y","temp","Graph","parentWidth","parentHeight","margin","top","bottom","left","right","forecasts","xMax","yMax","xScale","scaleTime","domain","extent","yScale","scaleLinear","max","range","width","height","fill","rx","Group","LinePath","data","stroke","strokeWidth","curve","curveMonotoneX","i","cx","cy","GlyphDot","r","LoaderWrapper","motion","custom","p","LoaderCircle","img","Loader","deployed","Fragment","src","require","animate","rotate","transition","duration","ease","loop","Infinity","buildDailyForecastFromList","list","daysHolder","currentArrayIndexInDaysHolder","forEach","forecast","forecastList","currentForecast","lastForecast","moment","unix","isSame","push","length","buildWeatherForDayUsingForecasts","dayForecast","mins","maxs","pictures","temp_min","temp_max","weather","icon","min","Math","apply","mode","date","format","array","modeMap","maxEl","maxCount","el","getWeatherImage","imageName","translateDayNameToEnglish","dayName","dayNameTranslated","toLowerCase","TodaysWeatherCardWrapper","TodaysWeatherCardDate","span","TodaysWeatherCardLeft","TodaysWeatherCardRight","TodaysWeatherCardTitle","rem","TodaysWeatherCardWeather","TodaysWeatherCardImage","TodaysWeatherCard","local","ceil","ForecastSliderCardWrapper","ForecastSliderCardImage","ForecastSliderInfo","ForecastSliderCardTitle","ForecastSliderCardDate","ForecastSliderCard","forecastedWeather","forecastClicked","onClick","commonParams","id","appid","process","units","getCurrentWeather","a","axios","get","params","getFiveDaysForecast","deployLoader","type","closeLoader","ForecastWrapper","ForecastSliderWrapper","sliderConfiguration","pagination","clickable","bulletElement","slidesPerView","slidesPerGroup","spaceBetween","observer","initialSlide","effect","coverflowEffect","slideShadows","stretch","keyboard","Forecast","onForecastClicked","dayInSpanish","translateDayNameToSpanish","history","state","currentWeather","this","forecastArrangedByDays","forecastPerDay","console","log","setState","Component","connect","dispatch","bindActionCreators","WeatherResumeCardWrapper","WeatherResumeCardDate","WeatherResumeCardImageWrapper","WeatherResumeCardImage","WeatherResumeCardInfo","WeatherResumeCardInfoPane","WeatherResumeCard","resume","className","WeatherDetailWrapper","WeatherDetailGraphWrapper","WeatherDetailNoData","ResponsiveChart","withParentSize","WeatherDetail","day","dayResume","wentToFar","fiveDaysForecast","groupedDaysForecast","match","filter","group","Error","role","aria-label","INITIAL_STATE","loaderReducer","action","combineReducers","loader","App","path","component","React","Boolean","window","location","hostname","ReactDOM","render","store","createStore","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.8f595aa6.chunk.js","sourcesContent":["const theme = {\n  colors: {\n    main: \"#0077ff\",\n    white: \"white\"\n  },\n  fonts: {\n    main: \"Poppins\",\n    secondary: \"Nunito\"\n  },\n  shadows: {\n    main: \"rgba(52, 69, 89, 0.2) 0px 6px 8px 0px\"\n  }\n};\n\nexport default theme;\n","const size = {\n  mobileS: \"320px\",\n  mobileM: \"375px\",\n  mobileL: \"425px\",\n  tablet: \"768px\",\n  laptop: \"1024px\",\n  laptopL: \"1440px\",\n  desktop: \"2560px\"\n};\n\nexport const device = {\n  mobileS: `(min-width: ${size.mobileS})`,\n  mobileM: `(min-width: ${size.mobileM})`,\n  mobileL: `(min-width: ${size.mobileL})`,\n  tablet: `(min-width: ${size.tablet})`,\n  laptop: `(min-width: ${size.laptop})`,\n  laptopL: `(min-width: ${size.laptopL})`,\n  desktop: `(min-width: ${size.desktop})`,\n  desktopL: `(min-width: ${size.desktop})`\n};\n","import styled from \"styled-components\";\n\nexport const CardWrapper = styled.div`\n  background-color: ${props => props.theme.colors.white};\n  border-radius: 18px;\n  box-shadow: ${props => props.theme.shadows.main};\n  margin: 16px 0;\n  padding: 8px 16px;\n  box-sizing: border-box;\n  font-family: ${props => props.theme.fonts.main};\n`;\n","import React from \"react\";\n\n// Styles\nimport { CardWrapper } from \"./Card.styled\";\n\nconst Card = ({ children, ...props }) => {\n  return <CardWrapper {...props}>{children && children}</CardWrapper>;\n};\n\nexport default Card;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Swiper from \"react-id-swiper\";\n\n// Styles\n// Version >= 2.4.0\nimport \"swiper/css/swiper.css\";\n\nconst Slider = ({ slides, config }) => (\n  <Swiper {...config}>\n    {slides && slides.map((slide, index) => <div key={index}>{slide}</div>)}\n  </Swiper>\n);\n\nSlider.propTypes = {\n  slides: PropTypes.array.isRequired,\n  config: PropTypes.object\n};\n\nexport default Slider;\n","import React from \"react\";\nimport { Group } from \"@vx/group\";\nimport { GlyphDot } from \"@vx/glyph\";\nimport { LinePath } from \"@vx/shape\";\nimport { genDateValue } from \"@vx/mock-data\";\nimport { scaleTime, scaleLinear } from \"@vx/scale\";\nimport { curveMonotoneX, curveBasis } from \"@vx/curve\";\nimport { extent, max } from \"d3-array\";\n\nconst x = d => d.dt;\nconst y = d => d.main.temp;\n\n// colors\nconst primary = \"#ffffff\";\nconst secondary = \"#0077ff\";\nconst contrast = \"#ffffff\";\n\nconst Graph = ({\n  parentWidth,\n  parentHeight,\n  margin = { top: 20, bottom: 20, left: 20, right: 20 },\n  forecasts\n}) => {\n  // bounds\n  const xMax = parentWidth;\n  const yMax = parentHeight;\n\n  // scales\n  const xScale = scaleTime({\n    domain: extent(forecasts, x)\n  });\n  const yScale = scaleLinear({\n    domain: [0, max(forecasts, y)]\n  });\n\n  // update scale range to match bounds\n  xScale.range([0, xMax]);\n  yScale.range([yMax, 0]);\n\n  return (\n    <svg width={parentWidth} height={parentHeight}>\n      <rect\n        x={0}\n        y={0}\n        width={parentWidth}\n        height={parentHeight}\n        fill={secondary}\n        rx={14}\n      />\n      <Group top={margin.top}>\n        <LinePath\n          data={forecasts}\n          x={x => xScale(x.dt)}\n          y={y => yScale(y.main.temp)}\n          stroke={primary}\n          strokeWidth={3}\n          curve={curveMonotoneX}\n        />\n        {forecasts.map((d, i) => {\n          const cx = xScale(x(d));\n          const cy = yScale(y(d));\n\n          return (\n            <g key={`line-point-${i}`}>\n              <GlyphDot\n                cx={cx}\n                cy={cy}\n                r={6}\n                fill={contrast}\n                stroke={secondary}\n                strokeWidth={10}\n              />\n              <GlyphDot\n                cx={cx}\n                cy={cy}\n                r={6}\n                fill={secondary}\n                stroke={primary}\n                strokeWidth={3}\n              />\n              <GlyphDot cx={cx} cy={cy} r={4} fill={contrast} />\n            </g>\n          );\n        })}\n      </Group>\n    </svg>\n  );\n};\n\nexport default Graph;\n","import React from \"react\";\nimport { motion } from \"framer-motion\";\nimport styled from \"styled-components\";\n\n// Styles\nconst LoaderWrapper = motion.custom(styled.div`\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  height: 100%;\n  width: 100%;\n  background-color: ${p => p.theme.colors.main};\n  z-index: 50;\n`);\n\nconst LoaderCircle = motion.custom(styled.img`\n  position: absolute;\n  margin: auto;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n`);\n\nconst Loader = ({ deployed }) => {\n  return (\n    <React.Fragment>\n      {deployed && (\n        <LoaderWrapper>\n          <LoaderCircle\n            src={require(\"../../assets/img/loader.svg\")}\n            animate={{ rotate: 360 }}\n            transition={{\n              duration: 1.8,\n              ease: \"linear\",\n              loop: Infinity\n            }}\n          />\n        </LoaderWrapper>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default Loader;\n","import moment from \"moment\";\n\n/**\n * The following takes a list of forecasts, each with a timestamp.\n * It groups the forecasts per day and return an array of forecasts\n * for all the days the list has.\n * @param {Array} list - The list with forecast at certain point of time\n */\nexport const buildDailyForecastFromList = list => {\n  const daysHolder = [];\n  let currentArrayIndexInDaysHolder = 0;\n\n  list.forEach((forecast, index, forecastList) => {\n    let currentForecast = forecast;\n    let lastForecast = index - 1 >= 0 ? forecastList[index - 1] : forecast;\n\n    // Check if currentForecast is same day as lastForecast\n    if (\n      moment\n        .unix(currentForecast.dt)\n        .isSame(moment.unix(lastForecast.dt), \"day\")\n    ) {\n      /**\n       * If current index does not exist within \"daysHolder\", create a new array (new day),\n       * push it to the days array and change the current index, as a new array has been created\n       * and the last index is not the old one.\n       *\n       * Finally, push the forecast to the correct index (day)\n       */\n      if (typeof daysHolder[currentArrayIndexInDaysHolder] === \"undefined\") {\n        let newDayInDaysHolder = [];\n        daysHolder.push(newDayInDaysHolder);\n\n        currentArrayIndexInDaysHolder = daysHolder.length - 1;\n      }\n\n      daysHolder[currentArrayIndexInDaysHolder].push(currentForecast);\n    } else {\n      let newDayInDaysHolder = [];\n      daysHolder.push(newDayInDaysHolder);\n\n      currentArrayIndexInDaysHolder = daysHolder.length - 1;\n\n      daysHolder[currentArrayIndexInDaysHolder].push(currentForecast);\n    }\n  });\n\n  return daysHolder;\n};\n\n/**\n * Builds a forecast applying simple math to the group of forecasts\n * @param {Array} dayForecast - An array containing the forecast for an specific time\n * within the day\n */\nexport const buildWeatherForDayUsingForecasts = dayForecast => {\n  let mins = [];\n  let maxs = [];\n  let pictures = [];\n\n  dayForecast.forEach(forecast => {\n    mins.push(forecast.main.temp_min);\n    maxs.push(forecast.main.temp_max);\n    pictures.push(forecast.weather[0].icon);\n  });\n\n  const dayWeather = {\n    min: Math.min.apply(null, mins),\n    max: Math.max.apply(null, maxs),\n    icon: mode(pictures),\n    date: moment.unix(dayForecast[0].dt).format(\"DD/MM/YYYY\")\n  };\n\n  return dayWeather;\n};\n\nconst mode = array => {\n  if (array.length === 0) return null;\n\n  let modeMap = {};\n  let maxEl = array[0];\n  let maxCount = 1;\n\n  for (let i = 0; i < array.length; i++) {\n    let el = array[i];\n    if (modeMap[el] == null) modeMap[el] = 1;\n    else modeMap[el]++;\n    if (modeMap[el] > maxCount) {\n      maxEl = el;\n      maxCount = modeMap[el];\n    }\n  }\n\n  return maxEl;\n};\n","export const getWeatherImage = imageName => {\n  return `http://openweathermap.org/img/wn/${imageName}@2x.png`;\n};\n","export const translateDayNameToEnglish = dayName => {\n  const dayNameLowercase = dayName.toLowerCase();\n  let dayNameTranslated = \"\";\n\n  switch (dayNameLowercase) {\n    case \"lunes\":\n      dayNameTranslated = \"monday\";\n      break;\n    case \"martes\":\n      dayNameTranslated = \"tuesday\";\n      break;\n    case \"miercoles\":\n      dayNameTranslated = \"wednesday\";\n      break;\n    case \"jueves\":\n      dayNameTranslated = \"thursday\";\n      break;\n    case \"viernes\":\n      dayNameTranslated = \"friday\";\n      break;\n    case \"sabado\":\n      dayNameTranslated = \"saturday\";\n      break;\n    case \"domingo\":\n      dayNameTranslated = \"sunday\";\n      break;\n    default:\n      dayNameTranslated = \"monday\";\n      break;\n  }\n\n  return dayNameTranslated;\n};\n\nexport const translateDayNameToSpanish = dayName => {\n  const dayNameLowercase = dayName.toLowerCase();\n  let dayNameTranslated = \"\";\n\n  switch (dayNameLowercase) {\n    case \"monday\":\n      dayNameTranslated = \"lunes\";\n      break;\n    case \"tuesday\":\n      dayNameTranslated = \"martes\";\n      break;\n    case \"wednesday\":\n      dayNameTranslated = \"miercoles\";\n      break;\n    case \"thursday\":\n      dayNameTranslated = \"jueves\";\n      break;\n    case \"friday\":\n      dayNameTranslated = \"viernes\";\n      break;\n    case \"saturday\":\n      dayNameTranslated = \"sabado\";\n      break;\n    case \"sunday\":\n      dayNameTranslated = \"domingo\";\n      break;\n    default:\n      dayNameTranslated = \"lunes\";\n      break;\n  }\n\n  return dayNameTranslated;\n};\n","import React from \"react\";\nimport moment from \"moment\";\n\nimport styled from \"styled-components\";\nimport { rem } from \"polished\";\nimport { device } from \"../../../../device\";\n\n// Components\nimport { Card } from \"../../../../components\";\n\n// Utils\nimport {getWeatherImage} from \"../../../../utils\";\n\n// Styles\nconst TodaysWeatherCardWrapper = styled.div`\n  display: flex;\n`;\n\nconst TodaysWeatherCardDate = styled.span`\n  padding: 8px;\n  color: ${props => props.theme.colors.white};\n  background: ${p => p.theme.colors.main};\n  display: block;\n  border-radius: 8px;\n  margin-bottom: 16px;\n  font-weight: 800;\n  width: fit-content;\n`;\n\nconst TodaysWeatherCardLeft = styled.div`\n  flex-grow: 2;\n`;\n\nconst TodaysWeatherCardRight = styled.div`\n  flex-grow: 1;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst TodaysWeatherCardTitle = styled.span`\n  font-size: ${rem(\"22px\")};\n  font-weight: 500;\n  display: block;\n`;\n\nconst TodaysWeatherCardWeather = styled.span`\n  font-size: ${rem(\"120px\")};\n  line-height: 100%;\n  display: block;\n\n  @media ${device.mobileS} {\n    font-size: ${rem(\"60px\")};\n  }\n\n  @media ${device.mobileM} {\n    font-size: ${rem(\"90px\")};\n  }\n`;\n\nconst TodaysWeatherCardImage = styled.img`\n  display: block;\n`;\n\nconst TodaysWeatherCard = ({ weather }) => {\n  return (\n    <React.Fragment>\n      {weather && (\n        <Card>\n          <TodaysWeatherCardDate>\n            {`Hoy · ${moment\n              .unix(weather.dt)\n              .local()\n              .format(\"DD/MM/YYYY\")}`}\n          </TodaysWeatherCardDate>\n          <TodaysWeatherCardWrapper>\n            <TodaysWeatherCardLeft>\n              <TodaysWeatherCardTitle>Ahora:</TodaysWeatherCardTitle>\n              <TodaysWeatherCardWeather>\n                {`${Math.ceil(weather.main.temp)}ºC`}\n              </TodaysWeatherCardWeather>\n            </TodaysWeatherCardLeft>\n            <TodaysWeatherCardRight>\n              <TodaysWeatherCardImage\n                src={getWeatherImage(weather.weather[0].icon)}\n              />\n            </TodaysWeatherCardRight>\n          </TodaysWeatherCardWrapper>\n        </Card>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default TodaysWeatherCard;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\n// UI Components\nimport { Card } from \"./../../../../components\";\n\n// Utils\nimport { getWeatherImage } from \"../../../../utils\";\n\n// Styles\nconst ForecastSliderCardWrapper = styled(Card)`\n  margin: auto;\n  display: flex;\n  flex-direction: column;\n  cursor: pointer;\n`;\n\nconst ForecastSliderCardImage = styled.img`\n  margin: auto;\n  display: block;\n`;\n\nconst ForecastSliderInfo = styled.div``;\n\nconst ForecastSliderCardTitle = styled.span`\n  display: block;\n  font-weight: 800;\n  text-align: center;\n`;\n\nconst ForecastSliderCardDate = styled(ForecastSliderCardTitle)`\n  margin: 16px;\n`;\n\nconst ForecastSliderCard = ({ forecastedWeather, forecastClicked }) => {\n  return (\n    <ForecastSliderCardWrapper onClick={() => forecastClicked(forecastedWeather.date)}>\n      <ForecastSliderCardImage src={getWeatherImage(forecastedWeather.icon)} />\n      <ForecastSliderInfo>\n        <ForecastSliderCardTitle>{`Min: ${Math.ceil(\n          forecastedWeather.min\n        )}ºC`}</ForecastSliderCardTitle>\n        <ForecastSliderCardTitle>{`Max: ${Math.ceil(\n          forecastedWeather.max\n        )}ºC`}</ForecastSliderCardTitle>\n        <ForecastSliderCardDate>\n          {forecastedWeather.date}\n        </ForecastSliderCardDate>\n      </ForecastSliderInfo>\n    </ForecastSliderCardWrapper>\n  );\n};\n\nexport default ForecastSliderCard;\n","import axios from \"axios\";\n\nconst ENDPOINT_HOST = \"https://api.openweathermap.org/data/2.5\";\nconst WEATHER_ENDPOINT_PATH = \"weather\";\nconst FORECAST_ENDPOINT_PATH = \"forecast\";\n\nconst DEFAULT_CITY = \"3873544\";\n\nconst WEATHER_API_KEY = process.env.REACT_APP_WEATHER_API_KEY;\n\nconst commonParams = {\n  id: DEFAULT_CITY,\n  appid: WEATHER_API_KEY,\n  units: \"metric\"\n};\n\nexport const getCurrentWeather = async () => {\n  return axios.get(`${ENDPOINT_HOST}/${WEATHER_ENDPOINT_PATH}`, {\n    params: {\n      ...commonParams\n    }\n  });\n};\n\nexport const getFiveDaysForecast = async () => {\n  return axios.get(`${ENDPOINT_HOST}/${FORECAST_ENDPOINT_PATH}`, {\n    params: {\n      ...commonParams\n    }\n  });\n};\n","export const deployLoader = () => ({\n  type: \"DEPLOY_LOADER\"\n});\n\nexport const closeLoader = () => ({\n  type: \"CLOSE_LOADER\"\n});\n","import styled from \"styled-components\";\nimport { rem } from \"polished\";\n\nexport const ForecastWrapper = styled.div`\n  height: 100%;\n  max-width: 560px;\n  padding: ${rem(\"24px\")};\n  background-color: #eff6ff;\n  box-sizing: border-box;\n  margin: auto;\n  overflow: hidden;\n`;\n\nexport const ForecastSliderWrapper = styled.div`\n  width: 100%;\n  margin: 24px 0;\n`;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport moment from \"moment\";\n\n// UI Components\nimport { TodaysWeatherCard, ForecastSliderCard } from \"./components\";\nimport { Slider, Card } from \"./../../components\";\n\n// Services\nimport { getCurrentWeather, getFiveDaysForecast } from \"./../../services\";\n\n// Utils\nimport {\n  buildDailyForecastFromList,\n  buildWeatherForDayUsingForecasts,\n  translateDayNameToSpanish\n} from \"../../utils\";\n\n// Actions\nimport { closeLoader, deployLoader } from \"../../redux/actions\";\n\n// Styles\nimport { ForecastWrapper, ForecastSliderWrapper } from \"./Forecast.styled\";\n\n// Slider configuration\nconst sliderConfiguration = {\n  pagination: {\n    clickable: true,\n    type: \"bullets\",\n    bulletElement: \"span\",\n    el: \".swiper-pagination\"\n  },\n  slidesPerView: 1,\n  slidesPerGroup: 1,\n  spaceBetween: 32,\n  observer: true,\n  initialSlide: 0,\n  effect: \"coverflow\",\n  coverflowEffect: {\n    slideShadows: false,\n    stretch: 10\n  },\n  keyboard: true\n};\n\nclass Forecast extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { currentWeather: null };\n  }\n\n  async componentDidMount() {\n    this.props.deployLoader();\n\n    try {\n      const currentWeather = await (await getCurrentWeather()).data;\n      const forecastedWeather = await (await getFiveDaysForecast()).data;\n      const forecastArrangedByDays = buildDailyForecastFromList(\n        forecastedWeather.list\n      );\n      const forecastPerDay = forecastArrangedByDays.map(forecast =>\n        buildWeatherForDayUsingForecasts(forecast)\n      );\n\n      console.log(forecastPerDay);\n\n      this.setState({\n        currentWeather,\n        forecastPerDay\n      });\n    } catch (error) {\n      console.log(error);\n    }\n\n    this.props.closeLoader();\n  }\n\n  /**\n   * ACTIONS\n   */\n  onForecastClicked = date => {\n    const dayFromDate = moment(date, \"DD/MM/YYYY\").format(\"dddd\");\n    const dayInSpanish = translateDayNameToSpanish(dayFromDate);\n\n    this.props.history.push(`/${dayInSpanish}`);\n  };\n\n  render() {\n    const { currentWeather, forecastPerDay } = this.state;\n\n    return (\n      <ForecastWrapper>\n        <TodaysWeatherCard weather={currentWeather} />\n        <ForecastSliderWrapper>\n          <Slider\n            config={sliderConfiguration}\n            slides={\n              forecastPerDay\n                ? forecastPerDay.map(forecast => (\n                    <ForecastSliderCard\n                      forecastedWeather={forecast}\n                      forecastClicked={date => this.onForecastClicked(date)}\n                      key={forecast.min}\n                    />\n                  ))\n                : [<Card />]\n            }\n          />\n        </ForecastSliderWrapper>\n      </ForecastWrapper>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      closeLoader,\n      deployLoader\n    },\n    dispatch\n  );\n\nexport default connect(null, mapDispatchToProps)(Forecast);\n","import styled from \"styled-components\";\nimport { rem } from \"polished\";\n\nexport const WeatherResumeCardWrapper = styled.div``;\n\nexport const WeatherResumeCardDate = styled.span`\n  font-size: ${rem(\"24px\")};\n  font-weight: 800;\n  text-align: center;\n  display: block;\n`;\n\nexport const WeatherResumeCardImageWrapper = styled.div``;\n\nexport const WeatherResumeCardImage = styled.img`\n  display: block;\n  margin: auto;\n`;\n\nexport const WeatherResumeCardInfo = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const WeatherResumeCardInfoPane = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  flex-grow: 1;\n\n  .temperature {\n    font-size: ${rem(\"24px\")};\n    font-weight: 800;\n  }\n`;\n","import React from \"react\";\n\n// Components\nimport { Card } from \"../../../../components\";\n\n// Utils\nimport { getWeatherImage } from \"../../../../utils\";\n\n// Styles\nimport {\n  WeatherResumeCardWrapper,\n  WeatherResumeCardDate,\n  WeatherResumeCardImageWrapper,\n  WeatherResumeCardImage,\n  WeatherResumeCardInfo,\n  WeatherResumeCardInfoPane\n} from \"./WeatherResumeCard.styled\";\n\nconst WeatherResumeCard = ({ resume }) => {\n  return (\n    <Card>\n      <WeatherResumeCardWrapper>\n        <WeatherResumeCardDate>{resume.date}</WeatherResumeCardDate>\n        <WeatherResumeCardImageWrapper>\n          <WeatherResumeCardImage src={getWeatherImage(resume.icon)} />\n        </WeatherResumeCardImageWrapper>\n        <WeatherResumeCardInfo>\n          <WeatherResumeCardInfoPane>\n            <span className=\"temperature\">{`${Math.ceil(resume.min)}ºC`}</span>\n            <span className=\"minOrMax\">Min</span>\n          </WeatherResumeCardInfoPane>\n          <WeatherResumeCardInfoPane>\n            <span className=\"temperature\">{`${Math.ceil(resume.max)}ºC`}</span>\n            <span className=\"minOrMax\">Max</span>\n          </WeatherResumeCardInfoPane>\n        </WeatherResumeCardInfo>\n      </WeatherResumeCardWrapper>\n    </Card>\n  );\n};\n\nexport default WeatherResumeCard;\n","import styled from \"styled-components\";\nimport { rem } from \"polished\";\n\nexport const WeatherDetailWrapper = styled.div`\n  height: 100%;\n  max-width: 560px;\n  padding: ${rem(\"24px\")};\n  background-color: #eff6ff;\n  box-sizing: border-box;\n  margin: auto;\n  overflow: hidden;\n`;\n\nexport const WeatherDetailGraphWrapper = styled.div`\n  height: 200px;\n  width: 100%;\n`;\n\nexport const WeatherDetailNoData = styled.div`\n  text-align: center;\n\n  h2 {\n    font-weight: 800;\n  }\n\n  p {\n    font-size: ${rem(\"32px\")};\n  }\n`;\n","import React, { Component } from \"react\";\nimport moment from \"moment\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\n\n// UI Components\nimport { Graph, Card } from \"../../components\";\nimport { WeatherResumeCard } from \"./components\";\nimport { withParentSize } from \"@vx/responsive\";\n\n// Services\nimport { getFiveDaysForecast } from \"../../services/weatherService\";\n\n// Utils\nimport {\n  buildDailyForecastFromList,\n  buildWeatherForDayUsingForecasts,\n  translateDayNameToEnglish\n} from \"../../utils\";\n\n// Actions\nimport { closeLoader, deployLoader } from \"../../redux/actions\";\n\n// Styles\nimport {\n  WeatherDetailWrapper,\n  WeatherDetailGraphWrapper,\n  WeatherDetailNoData\n} from \"./WeatherDetail.styled\";\n\nconst ResponsiveChart = withParentSize(Graph);\n\nclass WeatherDetail extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { day: null, dayResume: null, wentToFar: false };\n  }\n\n  async componentDidMount() {\n    this.props.deployLoader();\n\n    try {\n      const fiveDaysForecast = await (await getFiveDaysForecast()).data;\n      const groupedDaysForecast = buildDailyForecastFromList(\n        fiveDaysForecast.list\n      );\n\n      // Translate name to spanish\n      const dayNameTranslated = translateDayNameToEnglish(\n        this.props.match.params.dayName\n      );\n\n      // Iterate over the days and find a match between days\n      // It always goes to the future\n      const day = groupedDaysForecast.filter(\n        group =>\n          moment\n            .unix(group[0].dt)\n            .format(\"dddd\")\n            .toLowerCase() === dayNameTranslated\n      )[0];\n\n      if (typeof day === \"undefined\") {\n        throw new Error(\"You went to far. There is no data\");\n      }\n\n      this.setState({ day, dayResume: buildWeatherForDayUsingForecasts(day) });\n    } catch (error) {\n      this.setState({ wentToFar: true });\n    }\n\n    this.props.closeLoader();\n  }\n\n  render() {\n    const { day, dayResume, wentToFar } = this.state;\n\n    return (\n      <WeatherDetailWrapper>\n        {day && <WeatherResumeCard resume={dayResume} />}\n        {day && (\n          <WeatherDetailGraphWrapper>\n            <ResponsiveChart forecasts={day} />\n          </WeatherDetailGraphWrapper>\n        )}\n        {wentToFar && (\n          <WeatherDetailNoData>\n            <Card>\n              <h2>Lo lamento.</h2>\n              <p>\n                No tengo data para este día{\" \"}\n                <span role=\"img\" aria-label=\"sad\">\n                  😔\n                </span>\n              </p>\n            </Card>\n          </WeatherDetailNoData>\n        )}\n      </WeatherDetailWrapper>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      closeLoader,\n      deployLoader\n    },\n    dispatch\n  );\n\nexport default connect(null, mapDispatchToProps)(WeatherDetail);\n","const INITIAL_STATE = {\n  deployed: false\n};\n\nconst loaderReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case \"DEPLOY_LOADER\":\n      return {\n        deployed: true\n      };\n    case \"CLOSE_LOADER\":\n      return {\n        deployed: false\n      };\n    default:\n      return state;\n  }\n};\n\nexport default loaderReducer;\n","import { combineReducers } from \"redux\";\n\n// Reducers\nimport loaderReducer from \"./loaderReducer\";\n\nexport default combineReducers({\n  loader: loaderReducer\n});\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider } from \"styled-components\";\nimport theme from \"./theme\";\n\n// Containers (Views)\nimport { Forecast, WeatherDetail } from \"./containers\";\n\n// UI Components\nimport { Loader } from \"./components\";\n\n// Reducers\nimport combineReducers from \"./redux/reducers/combineReducers\";\n\nclass App extends React.Component {\n  render() {\n    const { loader } = this.props;\n    return (\n      <ThemeProvider theme={theme}>\n        <Router>\n          <Switch>\n            <Route path=\"/:dayName\" component={WeatherDetail} />\n            <Route path=\"/\" component={Forecast} />\n          </Switch>\n        </Router>\n        <Loader deployed={loader.deployed} />\n      </ThemeProvider>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const { loader } = state;\n\n  return { loader };\n};\n\nexport default connect(mapStateToProps, null)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\n\n// Reducers\nimport combineReducers from \"./redux/reducers/combineReducers\";\n\nReactDOM.render(\n  <Provider store={createStore(combineReducers)}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/loader.f62f3fc8.svg\";"],"sourceRoot":""}